generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Bookings {
  id             Int       @id @default(autoincrement())
  user_id        Int
  room_id        Int
  check_in_date  DateTime  @db.Date
  check_out_date DateTime  @db.Date
  guests_count   Int?
  total_price    Decimal?  @db.Decimal(10, 2)
  deletedBy      Int       @default(0)
  isDeleted      Boolean   @default(false)
  deletedAt      DateTime? @db.Timestamp(0)
  createdAt      DateTime  @default(now()) @db.Timestamp(0)
  updatedAt      DateTime  @default(now()) @db.Timestamp(0)
  Users          Users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Bookings_ibfk_1")
  Rooms          Rooms     @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Bookings_ibfk_2")

  @@index([room_id], map: "room_id")
  @@index([user_id], map: "fk_bookings_user")
}

model Locations {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  province    String?   @db.VarChar(100)
  country     String?   @db.VarChar(100)
  image       String?   @db.VarChar(255)
  description String?   @db.Text
  deletedBy   Int       @default(0)
  isDeleted   Boolean   @default(false)
  deletedAt   DateTime? @db.Timestamp(0)
  createdAt   DateTime  @default(now()) @db.Timestamp(0)
  updatedAt   DateTime  @default(now()) @db.Timestamp(0)
  Rooms       Rooms[]

  @@unique([name, province], map: "uq_location_name_province")
}

model RoomDetail {
  id           Int       @id @default(autoincrement())
  room_id      Int
  amenity_name String    @db.VarChar(255)
  description  String?   @db.Text
  deletedBy    Int       @default(0)
  isDeleted    Boolean   @default(false)
  deletedAt    DateTime? @db.Timestamp(0)
  createdAt    DateTime  @default(now()) @db.Timestamp(0)
  updatedAt    DateTime  @default(now()) @db.Timestamp(0)
  Rooms        Rooms     @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "RoomDetail_ibfk_1")

  @@index([room_id], map: "room_id")
}

model Rooms {
  id              Int          @id @default(autoincrement())
  name            String       @db.VarChar(255)
  description     String?      @db.Text
  price_per_night Decimal?     @db.Decimal(10, 2)
  location_id     Int?
  host_id         Int?
  deletedBy       Int          @default(0)
  isDeleted       Boolean      @default(false)
  deletedAt       DateTime?    @db.Timestamp(0)
  createdAt       DateTime     @default(now()) @db.Timestamp(0)
  updatedAt       DateTime     @default(now()) @db.Timestamp(0)
  Bookings        Bookings[]
  Comments        Comments[]
  RoomDetail      RoomDetail[]
  Locations       Locations?   @relation(fields: [location_id], references: [id], onUpdate: NoAction, map: "Rooms_ibfk_1")
  Users           Users?       @relation(fields: [host_id], references: [id], onUpdate: NoAction, map: "Rooms_ibfk_2")

  @@index([host_id], map: "host_id")
  @@index([location_id], map: "location_id")
}

model Users {
  id        Int         @id @default(autoincrement())
  avatar    String?     @db.VarChar(255)
  name      String      @db.VarChar(100)
  email     String      @unique(map: "email") @db.VarChar(100)
  password  String      @db.VarChar(255)
  phone     String?     @db.VarChar(20)
  birthday  DateTime?   @db.Date
  gender    Boolean?
  role      Users_role? @default(user)
  deletedBy Int         @default(0)
  isDeleted Boolean     @default(false)
  deletedAt DateTime?   @db.Timestamp(0)
  createdAt DateTime    @default(now()) @db.Timestamp(0)
  updatedAt DateTime    @default(now()) @db.Timestamp(0)
  Bookings  Bookings[]
  Comments  Comments[]
  Rooms     Rooms[]
}

model Comments {
  id           Int       @id @default(autoincrement())
  room_id      Int
  user_id      Int
  comment_date DateTime? @default(now()) @db.Timestamp(0)
  content      String?   @db.Text
  rating       Int?
  deletedBy    Int       @default(0)
  isDeleted    Boolean   @default(false)
  deletedAt    DateTime? @db.Timestamp(0)
  createdAt    DateTime  @default(now()) @db.Timestamp(0)
  updatedAt    DateTime  @default(now()) @db.Timestamp(0)
  Rooms        Rooms     @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Comments_ibfk_1")
  Users        Users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Comments_ibfk_2")

  @@index([room_id], map: "room_id")
  @@index([user_id], map: "user_id")
}

enum Users_role {
  admin
  user
}
